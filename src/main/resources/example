PREFIX cc:    <http://creativecommons.org/ns#> 
PREFIX void:  <http://rdfs.org/ns/void#> 
PREFIX skos:  <http://www.w3.org/2004/02/skos/core#> 
PREFIX rdfs:  <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX tbx:   <http://tbx2rdf.lider-project.eu/tbx#> 
PREFIX decomp: <http://www.w3.org/ns/lemon/decomp#> 
PREFIX dct:   <http://purl.org/dc/terms/> 
PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX ontolex: <http://www.w3.org/ns/lemon/ontolex#> 
PREFIX ldr:   <http://purl.oclc.org/NET/ldr/ns#> 
PREFIX odrl:  <http://www.w3.org/ns/odrl/2/> 
PREFIX dcat:  <http://www.w3.org/ns/dcat#> 
PREFIX prov:  <http://www.w3.org/ns/prov#> 
SELECT ?s ?p ?o from <http://tbx2rdf.lider-project.eu/> WHERE { 
    ?s ?p ?o .
    ?o ontolex:canonicalForm ?canform .
    ?canform ontolex:writtenRep ?rep .
}


select distinct ?type where {?thing <http://www.wikidata.org/prop/direct/P31> ?type}limit 20

  
      /*doc.getDocumentElement().normalize();
        Element root = doc.getDocumentElement();
        NodeList results = doc.getElementsByTagName("results");
        
        
        for (int i = 0; i < results.getLength(); i++) {
            Node node = results.item(i);

          
                Element eElement = (Element) node;
                System.out.println("First Name : " + eElement.getElementsByTagName("result").item(i).getTextContent());
                System.out.println("Employee id : " + eElement.getAttribute("result"));
                System.out.println("First Name : " + eElement.getElementsByTagName("firstName").item(0).getTextContent());
                System.out.println("Last Name : " + eElement.getElementsByTagName("lastName").item(0).getTextContent());
                System.out.println("Location : " + eElement.getElementsByTagName("location").item(0).getTextContent());
            
        }*/
